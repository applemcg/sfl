sfg1 () 
{ 
    : GREP from the Functions in the ENVIRONMENT;
    : date: 2023-08-02;
    : date: 2024-08-20;
    debug ENTRY $@ $#;
    set | functions | grep "$1"
}
functions () 
{ 
    : identify unique function on named files OR stdin;
    : related: eachfunction;
    : date: 2023-07-12;
    : date: 2024-09-14;
    debug ENTRY $# $@;
    awk '$2 ~ /^[(][)]$/ && $1 !~ /^_/ && !p[$1]++ { print $1 }' $@
}
fbdy () 
{ 
    : function bodies;
    : date: 2023-08-27;
    : date: 2024-01-10;
    declare -f ${@:-fbdy}
}
comment () 
{ 
    : arguments to Stderr;
    echo $@ 1>&2
}
debug () 
{ 
    : dummy to fill occasional calls;
    return
}
debug_on () 
{ 
    : write a COMMENT, on STDERR, at a point in a function, listing ...;
    : the CALLER and any passed ARGS, who CALLED it, 3rd, and that CALLER, 4th as well;
    : lesson: NO user functions in DEBUG:;
    : date: 2022-03-07;
    : date: 2023-01-30;
    eval "debug () { printf \"%-21s\\t%-21s\\t%-21s : %s\\n\" \${FUNCNAME[3]} \${FUNCNAME[2]} \${FUNCNAME[1]} \"\$*\" 1>&2; }"
}
debug_off () 
{ 
    : no diagnostics, just return;
    : date: 2023-03-29;
    function debug () 
    { 
        return
    }
}
pause () 
{ 
    : dummy to fill occasional calls;
    return
}
pause_on () 
{ 
    : pause the script, waiting for the users CR;
    : date: 2023-01-30;
    eval "pause () { read -p \"[return] / [Ctrl-C] \${FUNCNAME[1]} \$@ ? \" < /dev/tty; }"
}
pause_off () 
{ 
    : do not pause, just return;
    : date: 2023-03-29;
    function pause () 
    { 
        return
    }
}
sfl_help () 
{ 
    : for the library;
    cat <<EOF
 study  sequence: 
    0. abstracts.txt -- function abstracts,
    1. fbdy  
    2. functions
    3. sfg1
    4. sfl_init
    5. sfl_list
    6. sfl_help
    7. comment -- from common library
    8. debug, pause. "

  enjoy,
    ~ Marty
      MartyMcG@Fastmail.com

EOF

}
sfl_init () 
{ 
    : source slf101.lib, then run sfl_init;
    local lib=./slf101.lib;
    sfl_list fbdy | tee $lib;
    comment $(ls -l $lib);
    comment if you can, back-up $lib
}
sfl_list () 
{ 
    : Shell Library 101, library function list;
    ${*:-echo} sfg1 debug pause functions fbdy comment \
               sfl_{help,init,list}
}
